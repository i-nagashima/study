/* Create Next App
------------------------------------------------------------ */
Nextのプロジェクトを作成する

# npxの場合
$ npx create-next-app <プロジェクト>
$ npx create-next-app <プロジェクト> --ts

# yarnの場合
$ yarn create next-app <プロジェクト>
$ yarn create next-app <プロジェクト> --typescript

/* Next.jsは「pages」でページを用意する
------------------------------------------------------------ */
Next.jsでWebページを開発する場合、もっとも重要なのは「pages」フォルダ。
このフォルダの中に、ページ表示するためのスクリプトファイルを配置する。
index.htmlとかは？ ないです。
Next.jsではすべてJavaScriptファイルだけ。

/* styled-jsx
------------------------------------------------------------ */
Next.jsで標準で使えるCSS

/* CSSファイルは「styles」フォルダで
------------------------------------------------------------ */
Next.jsでは、スタイルシートファイルを<link>で読み込ませることはできない。
スタイルシートファイルは「styles」フォルダに用意する。

import styles from '../styles/Home.module.css';

/* 複数ページの注意点
------------------------------------------------------------ */
複数ページのファイルは ラムダ式の関数ではダメ
NG) export default Xxx = () => {}
OK) export default function Xxx() {}

/* Link コンポーネント
------------------------------------------------------------ */
リンクの表示を行うには、<Link> というタグを使用する。
インポートは以下
import Link from 'next/link';

<Link href="/other">
  <a>Go to Other page &gt;&gt;</a>
</Link>

<Link> タグは、<a> タグと同じようにリンクを作成するためのもの。
hrefに、リンク先のページアドレスを指定する。
<a> タグには、href などが用意されていない。つまり、リンクの機能は<a> タグではなく、<Link>のほうにある。
<a> タグの必要はない。<p> タグでもよいし、<button> タグでもよい。

※重要※
<Link> の href では小文字のパスを指定した場合、それに対応する
js or jsx ファイルがないとダメ
例)
<Link href="/other">
の場合は
other.js or other.jsx

/* レイアウトを考える
------------------------------------------------------------ */
アプリに用意されるすべてのページで統一されたレイアウトで表示できるように考える。
レイアウトはコンポーネント化して、メインのファイル（index.jsなど）は
レイアウトのchildrenで呼び出すみたいな感じにする

Layout.jsx
  Layout(props){
    <Head></Head>
    <Header></Header>
    <div>
    　// ここにメインが差し込まれる
      {props.children}
    </div>
    <Footer></Footer>
  }

index.js
  Index(){
    <Layout>
      // ここにメインを書く
      <div>
        ...
      </div>
      // ここにメインを書く
    </Layout>
  }

/* イメージファイルを用意する
------------------------------------------------------------ */
「public」フォルダの中に入れる
js や jsx で記述するパスは ./public/ と書かない。
「public」フォルダに置いたファイルはトップとして認識される

例）「public」フォルダに hoge.jpg を置いた場合
　　　https://www.xxx.com/hoge.jpg
    でアクセスできる
